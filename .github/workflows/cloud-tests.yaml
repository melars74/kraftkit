name: test/e2e/cloud

on:
  push:
    branches: [stable]

  pull_request:
    types: [opened, synchronize, reopened]
    branches: [staging]
    paths:
      - 'internal/cli/kraft/cloud/**'
      - '.github/workflows/cloud-tests.yaml'

jobs:
  e2e-ubuntu-cli:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.0
          cache: false

      - name: Set Go variables
        id: goenv
        run: |
          {
            echo "cache=$(go env GOCACHE)"
            echo "modcache=$(go env GOMODCACHE)"
            echo "mod=$(go env GOMOD)"
          } >>"$GITHUB_OUTPUT"

      - name: Go caches
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.goenv.outputs.cache }}
            ${{ steps.goenv.outputs.modcache }}
          key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles(steps.goenv.outputs.mod) }}
          restore-keys: |
            ${{ github.job }}-${{ runner.os }}-go-

      - name: Run framework unit tests
        env:
          KRAFTKIT_NO_WARN_SUDO: true
          KRAFTKIT_NO_CHECK_UPDATES: true
          DOCKER: ''
        run: make test-framework DISTDIR="$(go env GOPATH)"/bin

      - name: Run cloud e2e tests
        env:
          KRAFTCLOUD_ADDR: ${{ secrets.KRAFTCLOUD_ADDR }}
          KRAFTCLOUD_METRO: ${{ secrets.KRAFTCLOUD_METRO }}
          KRAFTCLOUD_TOKEN: ${{ secrets.KRAFTCLOUD_TOKEN }}
          KRAFTCLOUD_USER: ${{ env.KRAFTCLOUD_USER }}
          KRAFTKIT_NO_CHECK_UPDATES: true
          KRAFTKIT_NO_WARN_SUDO: true
          DOCKER: ''
        run: make test-cloud-e2e DISTDIR="$(go env GOPATH)"/bin
